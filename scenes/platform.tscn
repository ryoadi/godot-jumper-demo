[gd_scene load_steps=3 format=3 uid="uid://sbt8r6ckfb54"]

[sub_resource type="GDScript" id="GDScript_v4t87"]
resource_name = "Platform"
script/source = "extends StaticBody2D

# Platform properties
@export var platform_width: float = 120.0
@export var platform_height: float = 20.0

# Movement
var scroll_speed: float = 50.0  # Will be set by PlatformManager

# Signals
signal platform_left_screen

func _ready() -> void:
	# Initialize platform visuals if needed
	pass

func _process(delta: float) -> void:
	# Move platform downward
	global_position.y += scroll_speed * delta
	
	# Check if platform has gone off screen (below camera view)
	# We'll emit signal when it's far enough below screen
	if global_position.y > get_viewport_rect().size.y + 100:
		emit_signal(\"platform_left_screen\")

func set_scroll_speed(speed: float) -> void:
	scroll_speed = speed

func initialize(pos: Vector2, speed: float) -> void:
	global_position = pos
	scroll_speed = speed
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_ba0x2"]
size = Vector2(120, 20)

[node name="Platform" type="StaticBody2D"]
script = SubResource("GDScript_v4t87")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_ba0x2")
one_way_collision = true

[node name="ColorRect" type="ColorRect" parent="."]
offset_left = -62.0
offset_top = -11.0
offset_right = 62.0
offset_bottom = 12.0
